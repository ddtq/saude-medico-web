security:
    encoders:
        App\Entity\SuperUser:
            algorithm: auto 
        App\Entity\Medico:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        chain_provider:
             chain:
                providers: [app_user_provider, app_medico_provider]
        app_user_provider:
            entity:
                class: App\Entity\SuperUser
                property: cpf
        app_medico_provider:
            entity:
                class: App\Entity\Medico
                property: cpf
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin_app_user_provider:
            anonymous: lazy
            provider: chain_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator # Uasado pelo Admin
                    - App\Security\LoginFormAuthenticatorMedicoAuthenticator # Uasado pelo Medico
                entry_point: App\Security\LoginFormAuthenticatorMedicoAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                target: app_login 

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/medico/access, roles: ROLE_USER }
        - { path: ^/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # require ROLE_SUPER_ADMIN for ^/admin/login
        - { path: '^/admin/management', roles: ROLE_SUPER_ADMIN }
        - { path: '^/cadastrar/medico/newdoctor', roles: ROLE_SUPER_ADMIN }
        - { path: '^/editar/cadastro/medico/modify', roles: ROLE_SUPER_ADMIN }
        # - { path: '^/admin/', roles: ROLE_SUPER_ADMIN }

